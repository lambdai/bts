static_resources:
  listeners:
  - name: listener_internal_tcp_proxy
    address:
      envoy_internal_address:
        server_listener_name: internal_listener_foo
    internal_listener: {}
    filter_chains:
    - filters:
      - name: envoy.tcp_proxy
        typed_config: 
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: internal_tcp_proxy
          cluster: target_cluster
    listenerFiltersTimeout: 0.100s
    continueOnListenerFiltersTimeout: true
  - name: listener_os_tcp_proxy
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 7000
    filter_chains:
    - filters:
      - name: envoy.tcp_proxy
        typed_config: 
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: os_tcp_proxy
          cluster: target_cluster
    listenerFiltersTimeout: 0.100s
    continueOnListenerFiltersTimeout: true
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 15009
    listener_filters:
      - name: "envoy.listener.tls_inspector"
        typed_config: {}
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config: 
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: localgw
          common_http_protocol_options:
            max_stream_duration: 3600s
          http2_protocol_options: 
            allow_connect: true
          upgrade_configs: 
            upgrade_type: "CONNECT"
          #            connect_config: 
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend2
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                  headers:
                  - name: target
                    exact_match: "httptocluster"
                route:
                  cluster: "target_cluster"
                  upgrade_configs:
                    upgrade_type: "CONNECT"
                    connect_config: 
                    enabled: true
              - match:
                  prefix: "/"
                  headers:
                  - name: target
                    exact_match: "internaltcpproxystack"
                route:
                  cluster: "internal_tcp_proxy_cluster"
                  upgrade_configs:
                    upgrade_type: "CONNECT"
                    connect_config: 
                    enabled: true
              - match:
                  prefix: "/"
                  headers:
                  - name: target
                    exact_match: "ostcpproxystack"
                route:
                  cluster: "os_tcp_proxy_cluster"
                  upgrade_configs:
                    upgrade_type: "CONNECT"
                    connect_config: 
                    enabled: true
              - match:
                  prefix: "/service/1"
                direct_response:
                  status: 200
                  body: 
                    inline_string: "from plain text"
              - match:
                  prefix: "/service/2"
                direct_response:
                  status: 200
                  body: 
                    inline_string: "from tls sevice/2"
          http_filters:
          - name: envoy.filters.http.router
            typed_config: {}
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 6000
    listener_filters:
      - name: "envoy.listener.tls_inspector"
        typed_config: {}
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config: 
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: http6000
          http2_protocol_options: 
            allow_connect: true
          upgrade_configs: 
            upgrade_type: "CONNECT"
          #            connect_config: 
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend2
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/add"
                route:
                  cluster: "echo_cluster"
              - match:
                      #connect_matcher:
                  prefix: "/"
                route:
                  cluster: "echo_cluster"
                  upgrade_configs:
                    upgrade_type: "CONNECT"
                    connect_config: 
                    enabled: true
              - match:
                  prefix: "/service/1"
                direct_response:
                  status: 200
                  body: 
                    inline_string: "from plain text"
              - match:
                  prefix: "/service/2"
                direct_response:
                  status: 200
                  body: 
                    inline_string: "from tls sevice/2"
          http_filters:
          - name: envoy.filters.http.router
            typed_config: {}
#      tls_context:
#        common_tls_context:
#          tls_certificates:
#            - certificate_chain:
#                filename: "/home/lambdai/bts/example-com.crt"
#              private_key:
#                filename: "/home/lambdai/bts/example-com.key"
  clusters:
  - name: service1
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    load_assignment:
      cluster_name: statsd
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 91
                protocol: TCP
    dns_refresh_rate: 60s
  - name: echo_cluster
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: statsd
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 90
                protocol: TCP
    dns_refresh_rate: 60s
  - name: target_cluster
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: statsd
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 4096
                protocol: TCP
    dns_refresh_rate: 60s
  - name: os_tcp_proxy_cluster
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: statsd
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 7000
                protocol: TCP
    dns_refresh_rate: 60s
  - name: internal_tcp_proxy_cluster
    connect_timeout: 1s
      #    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: internal_tcp_proxy_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              envoy_internal_address:
                server_listener_name: internal_listener_foo
    dns_refresh_rate: 60s
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 15000
