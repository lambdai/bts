static_resources:
  listeners:
  - name: foobar
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 0
    listener_filters:
            #      - name: "envoy.listener.tls_inspector"
            #        typed_config: {}
      - name: "envoy.listener.tls_inspector"
    filter_chains:
    - filters:
      - name: envoy.tcp_proxy
        typed_config: 
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: client
          cluster: server_cluster
          tunneling_config: 
            hostname: demo.com
    listenerFiltersTimeout: 0.100s
    continueOnListenerFiltersTimeout: true
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 4000  # for test
    filter_chains:
    - filters:
      - name: envoy.tcp_proxy
        typed_config: 
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: client
          cluster: mixed_cluster
          tunneling_config: 
            hostname: demo.com
            headers_to_add:
            - header:
                key: target
                value: httptocluster 
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 4001  # for test
#    listener_filters:
#      - name: "envoy.listener.tls_inspector"
    filter_chains:
    - filters:
      - name: envoy.tcp_proxy
        typed_config: 
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: client
          cluster: mixed_cluster
          tunneling_config: 
            hostname: demo.com
            headers_to_add:
            - header:
                key: target
                value: internaltcpproxystack
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 4002  # for test
    filter_chains:
    - filters:
      - name: envoy.tcp_proxy
        typed_config: 
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: client
          cluster: mixed_cluster
          tunneling_config: 
            hostname: demo.com
            headers_to_add:
            - header:
                key: target
                value: ostcpproxystack
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 5000  # for test
    filter_chains:
    - filters:
      - name: envoy.tcp_proxy
        typed_config: 
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: client
          cluster: remote_service_cluster
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 5001  # for test
    filter_chains:
    - filters:
      - name: envoy.tcp_proxy
        typed_config: 
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: client
          cluster: remote_tcp_proxy_cluster
#      tls_context:
#        common_tls_context:
#          tls_certificates:
#            - certificate_chain:
#                filename: "/home/lambdai/bts/example-com.crt"
#              private_key:
#                filename: "/home/lambdai/bts/example-com.key"
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8888  # for test
    filter_chains:
    - filters:
      - name: envoy.tcp_proxy
        typed_config: 
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: client
          cluster: notexist
  clusters:
  - name: mixed_cluster
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    load_assignment:
      cluster_name: "mixed_cluster"
      endpoints:
        lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 15009
          metadata:
                  #        - endpoint:
                  #            address:
                  #              socket_address:
                  #                address: 127.0.0.1
                  #                port_value: 10001
                  #          metadata:
                  #            filter_metadata:
                  #              envoy.plaintcponly:
    dns_refresh_rate: 60s
  - name: remote_service_cluster
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    load_assignment:
      cluster_name: remote_service_cluster
      endpoints:
        lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 192.168.1.11
                port_value: 4096
          metadata:
                  #        - endpoint:
                  #            address:
                  #              socket_address:
                  #                address: 127.0.0.1
                  #                port_value: 10001
                  #          metadata:
                  #            filter_metadata:
                  #              envoy.plaintcponly:
    dns_refresh_rate: 60s
  - name: remote_tcp_proxy_cluster
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    load_assignment:
      cluster_name: remote_tcp_proxy_clsuter
      endpoints:
        lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 192.168.1.11
                port_value: 7000
  - name: notexist
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: "notexist"
      endpoints:
        lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8889
    dns_refresh_rate: 60s
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 25000
