static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 15006
    listener_filters:
            #      - name: "envoy.listener.tls_inspector"
            #        typed_config: {}
      - name: "envoy.listener.tls_inspector"
    filter_chains:
    - filters:
      - name: envoy.tcp_proxy
        typed_config: 
          "@type": type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy
          stat_prefix: pingping
          cluster: ping_cluster
    listenerFiltersTimeout: 0.100s
    continueOnListenerFiltersTimeout: true
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 7071
    listener_filters:
      - name: "envoy.listener.tls_inspector"
        typed_config: {}
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: plain_back
          route_config:
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                direct_response:
                  status: 200
                  body: 
                    inline_string: "from plain text"
          http_filters:
          - name: envoy.filters.http.router
            config: {}
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 7072
    listener_filters:
      - name: "envoy.listener.tls_inspector"
        typed_config: {}
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: tls_back
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/service/1"
                direct_response:
                  status: 200
                  body: 
                    inline_string: "from plain text"
              - match:
                  prefix: "/service/2"
                direct_response:
                  status: 200
                  body: 
                    inline_string: "from tls sevice/2"
          http_filters:
          - name: envoy.filters.http.router
            typed_config: {}
    listenerFiltersTimeout: 0.100s
    continueOnListenerFiltersTimeout: true
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 15009
    listener_filters:
      - name: "envoy.listener.tls_inspector"
        typed_config: {}
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        #typed_config: 
        #          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
        config:
          codec_type: auto
          stat_prefix: localgw
          http2_protocol_options: 
            allow_connect: true
          upgrade_configs: 
            upgrade_type: "CONNECT"
          #            connect_config: 
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend2
              domains:
              - "*"
              routes:
              - match:
                      #connect_matcher:
                  prefix: "/"
                route:
                  cluster: "echo_cluster"
                  upgrade_configs:
                    upgrade_type: "CONNECT"
                    connect_config: 
                    enabled: true
              - match:
                  prefix: "/service/1"
                direct_response:
                  status: 200
                  body: 
                    inline_string: "from plain text"
              - match:
                  prefix: "/service/2"
                direct_response:
                  status: 200
                  body: 
                    inline_string: "from tls sevice/2"
          http_filters:
          - name: envoy.filters.http.router
            typed_config: {}
#      tls_context:
#        common_tls_context:
#          tls_certificates:
#            - certificate_chain:
#                filename: "/home/lambdai/bts/example-com.crt"
#              private_key:
#                filename: "/home/lambdai/bts/example-com.key"
  clusters:
  - name: service1
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    hosts:
    - socket_address:
        address: 127.0.0.1
        port_value: 80
    dns_refresh_rate: 60s
  - name: ping_cluster
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    hosts:
    - socket_address:
        address: 127.0.0.1
        port_value: 9000
    dns_refresh_rate: 60s
  - name: echo_cluster
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    hosts:
    - socket_address:
        address: 127.0.0.1
        port_value: 9999
    dns_refresh_rate: 60s
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 15000
